package com.institution.security;

import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;
import org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer;

import com.institution.errorHandling.CustomAccessDeniedHandler;
import com.institution.errorHandling.CustomAuthenticationEntryPoint;

public class ResourceServerConfiguration extends ResourceServerConfigurerAdapter{
	private final CustomAuthenticationEntryPoint customAuthenticationEntryPoint;
	 public ResourceServerConfiguration(CustomAuthenticationEntryPoint customAuthenticationEntryPoint) {
	        this.customAuthenticationEntryPoint = customAuthenticationEntryPoint;
	    }

	    @Override
	    public void configure(ResourceServerSecurityConfigurer resources) {
	       // resources.resourceId("api");
	    }
	    

	    //@Override
	    /*public void configure(HttpSecurity http) throws Exception {
	        http
	                
	                .authorizeRequests().antMatchers("/authenticate").permitAll()
	                .antMatchers("/api/signin**").permitAll()
	                .antMatchers("/api/signin/**").permitAll()
	                .antMatchers("/api/glee**").hasAnyAuthority("ADMIN", "USER")
	                .antMatchers("/api/users**").hasAuthority("ADMIN")
	                .antMatchers("/api/**").authenticated()
	                .anyRequest().authenticated();
	                //.and()
	                //.exceptionHandling().authenticationEntryPoint(customAuthenticationEntryPoint);//.accessDeniedHandler(new CustomAccessDeniedHandler());
	    }*/

}
